org: torrinlisi
app: rsvp
service: rsvp-service
package:
  exclude:
    - '**/**'
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  apiKeys:
    - rsvp-api-key-${opt:stage, 'dev'}

functions:
  admin-rsvp:
    name: admin-rsvp-${opt:stage, 'dev'}
    handler: admin-rsvp/index.handler
    environment:
      PGDATABASE: ${param:PGDATABASE}
      PGHOST: ${param:PGHOST}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: ${param:PGPORT}
      PGUSER: ${param:PGUSER}
    package:
      include:
        - admin-rsvp/index.js
    layers:
      - arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:layer:node-pg:1
    events:
      - http:
          method: GET
          path: /admin
          private: true
          cors: true
  validate-rsvp:
    name: validate-rsvp-${opt:stage, 'dev'}
    handler:  validate-rsvp/index.handler
    environment:
      PGDATABASE: ${param:PGDATABASE}
      PGHOST: ${param:PGHOST}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: ${param:PGPORT}
      PGUSER: ${param:PGUSER}
    package:
      include:
        -  validate-rsvp/index.js
    layers:
      - arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:layer:node-pg:1
    events:
      - http:
          method: GET
          path: /rsvp
          private: true
          cors: true
  submit-rsvp-response:
    name: submit-rsvp-response-${opt:stage, 'dev'}
    handler:  submit-rsvp-response/index.handler
    environment:
      PGDATABASE: ${param:PGDATABASE}
      PGHOST: ${param:PGHOST}
      PGPASSWORD: ${param:PGPASSWORD}
      PGPORT: ${param:PGPORT}
      PGUSER: ${param:PGUSER}
    package:
      include:
        -  submit-rsvp-response/index.js
    layers:
      - arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:layer:node-pg:1
    events:
      - http:
          method: POST
          path: /rsvp
          private: true
          cors: true

plugins:
  - serverless-pseudo-parameters